@{
    ViewBag.Title = "Home Page";
}
@using StackExchange.Models
@model StackExchange.Models.TradingViewModel

<br />
<b>@Html.LabelFor(m => m.User.Balance):</b> @Model.User.Balance
<br />
<b>@Html.LabelFor(m => m.User.ItemCount):</b> @Model.User.ItemCount
<br />
<div class="row">
    <br />
    <div class="col-md-4">
        @using (Html.BeginForm("AddOrder", "Home"))
        {
            @Html.ValidationMessageFor(m => m.Order.Quantity)
            @Html.LabelFor(m => m.Order.Quantity)
            @Html.TextBoxFor(m => m.Order.Quantity, new { @class = "form-control" })

            @Html.ValidationMessageFor(m => m.Order.Price)
            @Html.LabelFor(m => m.Order.Price)
            @Html.TextBoxFor(m => m.Order.Price, new { @class = "form-control" })

            @Html.LabelFor(m => m.Order.Type)
            @Html.EnumDropDownListFor(x => x.Order.Type,
                new { @class = "form-control" })
            <br />
            <button type="submit" class="btn btn-primary">Submit</button>
        }
    </div>
    @foreach (var type in Enum.GetValues(typeof(OrderType)))
    {
      
        <div class="col-md-4">
            <b>@Enum.GetName(typeof(OrderType), type)s</b>
            <table class="table table-bordered">
                <thead>
                <tr>
                    <th>Price</th>
                    <th>Quantity</th>
                </tr>
                </thead>

                @foreach (var entry in Model.OrderQueues.Where(o => o.Type == (OrderType) type))
                {
                    <tr>
                        <td>@entry.Price</td>
                        <td>@entry.TotalCount</td>
                    </tr>
                }
            </table>
        </div>
     }
</div>
<br />

<table class="table table-bordered">
    <thead>
        <tr>
            <th>Executed</th>
            <th>Ask Date</th>
            <th>Bid Date</th>
            <th>Price</th>
            <th>Quantity</th>
            <th>Ask email</th>
            <th>Bid email</th>
        </tr>
        @foreach (var entry in Model.Logs.Reverse())
        {
            <tr>
                <td>@entry.ExecutedDate</td>
                <td>@entry.AskDate</td>
                <td>@entry.BidDate</td>
                <td>@entry.Price</td>
                <td>@entry.Count</td>
                <td>@entry.AskEmail</td>
                <td>@entry.BidEmail</td>
            </tr>
        }
    </thead>
</table>
